name: Run Tests

on:
  push:
    branches:
      - master  # Run tests on pushes to the main branch
      - dev
  pull_request:
    branches:
      - master  # Run tests on pull requests targeting the main branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Match your local Python version

      # Install pip and upgrade
      - name: Install pip
        run: |
          python -m pip install --upgrade pip
          echo "Upgraded pip to $(pip --version)"

      # Install Miniforge for Conda
      - name: Install Miniforge
        run: |
          wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh" -O miniforge.sh
          bash miniforge.sh -b -p $HOME/miniforge3
          rm miniforge.sh
          echo "Installed Miniforge to $HOME/miniforge3"

      # Initialize Conda
      - name: Initialize Conda
        run: |
          source $HOME/miniforge3/bin/activate
          conda init bash
          conda install -y pip
          echo "Initialized Conda"

      # Set up anba4-env
      - name: Set up anba4-env
        run: |
          source $HOME/miniforge3/bin/activate
          if conda env list | grep -q 'anba4-env'; then
            echo "anba4-env already exists"
          else
            conda create -n anba4-env -y fenics=2019.1.0 python=3.9
            echo "Created anba4-env"
          fi
          conda activate anba4-env
          if [ ! -d "anba4" ]; then
            git clone https://github.com/ANBA4/anba4.git
          else
            cd anba4
            git pull
            cd ..
          fi
          cd anba4
          pip install -e .
          conda install -y pyyaml pyvista numpy scipy
          echo "Set up anba4-env with ANBA4"

      # Install CCBlade
      - name: Install CCBlade
        run: |
          python -m pip install git+https://github.com/WISDEM/CCBlade.git
          python -c "import ccblade; print('CCBlade version:', ccblade.__version__)"
          echo "Installed CCBlade"

      # Install test dependencies
      - name: Install test dependencies
        run: |
          python -m pip install "pytest>=8.3.3" "pytest-cov>=6.0.0"
          echo "Installed test dependencies"

      # Install B3P
      - name: Install B3P
        run: |
          python -m pip install -e .
          python -c "import b3p; print('B3P installed')"
          echo "Installed B3P in editable mode"

      # Verify package installations
      - name: Verify package installations
        run: |
          python -c "import ccblade, pytest, pyvista, vtk, numpy; print('All key packages imported successfully')"
          echo "Verified package installations"

      # Run tests
      - name: Run tests with pytest
        run: |
          pytest tests/ -v -s --log-cli-level=INFO --cov=b3p
        env:
          VERBOSE: 1
