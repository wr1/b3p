from .test_build import run_build
import os
import pytest
import pyvista as pv
import pandas as pd
from io import StringIO
import glob


@pytest.fixture(scope="session")
def load_geometry(run_build):
    """Fixture to run step s2. Checks if output exists to avoid re-running."""
    return pv.read(os.path.join(workdir, "test_blade_joined.vtu"))


def test_planform(run_build):
    df = pd.read_csv(
        StringIO("""relative_r;z;prebend;chord;relative_thickness;absolute_thickness;twist
0.0;3.0;0.0;5.0;1.0;5.0;10.0
0.02040816326530612;5.5102040816326525;-0.005407158395959786;5.033847205909142;0.9939327299428233;5.003247712023872;8.993161409550654
0.04081632653061224;8.020408163265305;-0.010491173847976012;5.115369465716411;0.9803030813286899;5.014480899201046;7.997708212937469
0.061224489795918366;10.53061224489796;-0.014868783794627248;5.2637055227954495;0.9508637523896897;5.004391740954547;7.027144016803336
0.08163265306122448;13.040816326530612;-0.018209330339785192;5.460213848509182;0.9045829603995073;4.937931053184298;6.093118991585259
0.1020408163265306;15.551020408163264;-0.02027233501353836;5.682804496232784;0.8463662672879092;4.809431493778166;5.204105988510148
0.12244897959183673;18.06122448979592;-0.020449086688923306;5.9132915055003155;0.7791742813821635;4.605510262769473;4.381551912246123
0.14285714285714285;20.57142857142857;-0.018737080381878445;6.131385086796754;0.7087295287143149;4.344563738090062;3.625545021660132
0.16326530612244897;23.081632653061224;-0.014505060108886136;6.314205759391761;0.6392378344567363;4.035285298390496;2.958326551222816
0.18367346938775508;25.591836734693874;-0.007562647081266435;6.4437525721878925;0.5751033861154474;3.7051060265254785;2.3866041748221463
0.2040816326530612;28.10204081632653;0.0023099159427347683;6.502848935722664;0.5203477273322857;3.3837626053030827;1.9185159588345275
0.22448979591836732;30.61224489795918;0.015172908899575281;6.471235684707727;0.4787747913633849;3.0985780469504913;1.5712394944080477
0.24489795918367346;33.12244897959183;0.029223765298416096;6.37039973652871;0.4469433233533109;2.8473690320631113;1.314998642550304
0.26530612244897955;35.63265306122449;0.042826730547046735;6.201891108819413;0.42391693979412176;2.629498592844792;1.1482579782135125
0.2857142857142857;38.14285714285714;0.05435857497356473;5.984212197138218;0.40650904504874413;2.433015473844043;1.0470929459474014
0.3061224489795918;40.65306122448979;0.06214797321208519;5.728712911609933;0.39246730057325774;2.248525350865894;0.997038713285074
0.32653061224489793;43.16326530612245;0.06405917585170676;5.445314566952005;0.3798373954097146;2.068787491302543;0.9856620531873658
0.3469387755102041;45.6734693877551;0.05933016674089738;5.149046623151873;0.367715366796206;1.8934873741600822;0.9933551244599486
0.36734693877551017;48.183673469387756;0.044798654000321035;4.851084999351872;0.35617108842438955;1.72819401848467;1.0063489215592836
0.3877551020408163;50.69387755102041;0.020115943848605992;4.563483711963881;0.3451123815496736;1.5752013653696406;1.0088354018183214
0.4081632653061224;53.20408163265306;-0.016884921886577507;4.298438376230393;0.33454940760847;1.438211194326904;0.9854572720322861
0.42857142857142855;55.714285714285715;-0.06751210266182445;4.062707776347512;0.324485432776768;1.318562645382943;0.9287452882873238
0.44897959183673464;58.22448979591836;-0.12986928880275378;3.850939030070871;0.3148463027626588;1.212473761670234;0.8469808586144771
0.4693877551020408;60.73469387755102;-0.20594042768613557;3.6646748637508155;0.30570387343791056;1.1204924781182275;0.7420074145534944
0.4897959183673469;63.24489795918367;-0.2930067766104704;3.4966901637744128;0.29695967564491493;1.0384904854671506;0.6236803341141581
0.5102040816326531;65.75510204081633;-0.39171295147427093;3.345688662053148;0.28863705649352256;0.965782455807016;0.4969531317433762
0.5306122448979591;68.26530612244898;-0.5015946952314576;3.208481916248691;0.2807192012258618;0.9008056012770638;0.36824397230002787
0.5510204081632653;70.77551020408163;-0.6212224969775574;3.080975662438712;0.2731543349040255;0.8415906514150548;0.2434501955950205
0.5714285714285714;73.28571428571428;-0.752025867617044;2.961540778677904;0.26599423246592074;0.7878536501346773;0.1305395289101353
0.5918367346938775;75.79591836734693;-0.8916100423870488;2.8458131112230105;0.2591521587936051;0.7375519979441959;0.03334792399801213
0.6122448979591836;78.30612244897958;-1.0406931167185565;2.7313622995821456;0.2526541223255132;0.6901569680405365;-0.04044551961639477
0.6326530612244897;80.81632653061223;-1.1984434359031249;2.6171892446706773;0.24647000166085323;0.6451376495407738;-0.09260160817435248
0.6530612244897959;83.3265306122449;-1.3639892654873236;2.5038457661389697;0.24056822376506037;0.6023641123486385;-0.12976177924882046
0.673469387755102;85.83673469387755;-1.5380119611359024;2.3922611428974414;0.23497346641227737;0.562193830239469;-0.1566363876259777
0.6938775510204082;88.3469387755102;-1.7187279741970176;2.2828277206157352;0.22962113189960134;0.5242166150161347;-0.18074747026320262
0.7142857142857142;90.85714285714285;-1.9067084410367083;2.176650074902902;0.22453190600829898;0.48878023489222655;-0.2083317517344374
0.7346938775510203;93.3673469387755;-2.1009413480940986;2.074187501756951;0.21966913498559953;0.45568669595348776;-0.24532059888494417
0.7551020408163265;95.87755102040816;-2.300925698556872;1.9760914668320737;0.21501467340933939;0.4249081587060031;-0.2976416208265306
0.7755102040816326;98.38775510204081;-2.506781731659984;1.8835638263557068;0.21057287618083775;0.3966768605727791;-0.3737340406618886
0.7959183673469387;100.89795918367345;-2.7172435954576497;1.7963677839880918;0.20629789586676106;0.3706006051379542;-0.47597145346495173
0.8163265306122448;103.40816326530611;-2.932641947845999;1.7161197853682082;0.20220170844573737;0.34703621654526734;-0.6112863912662072
0.836734693877551;105.91836734693877;-3.1519714552216525;1.6426093862079902;0.19824790210395815;0.32567113410429793;-0.758857298713565
0.8571428571428571;108.42857142857143;-3.3749148196034753;1.5766414435000011;0.19442498474071973;0.30655224450466023;-0.8918465089814352
0.8775510204081632;110.93877551020408;-3.601218202606561;1.5193219647098832;0.19072376267545915;0.28979524654523225;-0.9795844387867115
0.8979591836734693;113.44897959183672;-3.8300399295862193;1.4700956329292028;0.1871137515989415;0.2750784520095876;-1.0021910506057499
0.9183673469387754;115.95918367346938;-4.061376660563703;1.4312774759941564;0.18359483054168554;0.2627887808119421;-0.9234653562097336
0.9387755102040816;118.46938775510203;-4.2944167807030595;1.401846399098468;0.1801376039197862;0.2525331517546034;-0.7667391580361732
0.9591836734693877;120.97959183673468;-4.5288396520444065;1.325391575015201;0.17673045866305867;0.23429730553955364;-0.5465627927848795
0.9795918367346939;123.48979591836735;-4.764204397392908;0.947051377403028;0.17335742679999885;0.16441401249810336;-0.28316674850962253
1.0;126.0;-5.0;0.10000000000000031;0.16999999999999985;0.017000000000000036;6.661338147750939e-16"""),
        sep=";",
    )
    pref = glob.glob(os.path.join(workdir, "*50.csv"))[0]
    planform = pd.read_csv(pref, sep=";")

    pd.testing.assert_frame_equal(df, planform)


def test_geometry_bounding_box(load_geometry):
    """Test if the geometry bounding box is correct."""
    assert load_geometry.bounds == (
        -3.0369677543640137,
        2.499872922897339,
        -3.3991336822509766,
        3.0669267177581787,
        0.0,
        100.0,
    )
